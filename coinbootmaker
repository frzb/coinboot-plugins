#!/bin/bash

# Copyright (C) 2018 Gunter Miegel coinboot.io
#
# This file is part of Coinboot.
# This software may be modified and distributed under the terms
# of the MIT license.  See the LICENSE file for details.

# Helper script to convert initramfs archive into a Docker container.

display_help() {
  echo
  echo 'Coinbootmaker creates an environment for building Coinboot plugins from an'
  echo 'given Coinboot Initramfs.'
  echo
  echo 'When no arguments beside the path to a Coinboot Initramfs is supplied'
  echo 'Coinbootmaker automatically builds all plugins from the ./src directory.'
  echo 'Packaged Coinboot pluings are written to the ./builds directory'
  echo
  echo 'Usage: coinbootmaker [-i] <path to initramfs>'
  echo
  echo '-i            Interactive mode - opens a shell in the build environment'
  echo '-h            Display this help'
  echo
}

while getopts "ih" opt; do
  case $opt in
    i)
      interactive=true
      ;;
    h)
      display_help
      exit 1
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done

shift $((OPTIND -1))

BASEDIR=$PWD
INITRAMFS=$1
WORKING_DIRECTORY=/tmp/$(basename $INITRAMFS)_extracted_by_-coinbootmaker

install -d cache
install -d build

mkdir -p $WORKING_DIRECTORY
cd $WORKING_DIRECTORY


zcat $INITRAMFS | fakeroot cpio -idm

# Now we extract the nested initramfs
# We force to overwrite existing files from busybox with '-u'
zcat rootfs.cgz | fakeroot cpio -uidm

# The nested initramfs archive can be removed now
echo $PWD
fakeroot rm -v rootfs.cgz

cd $BASEDIR

fakeroot tar -C $WORKING_DIRECTORY -c . | docker import - coinbootmaker

if ! grep -q '200000' /proc/sys/fs/inotify/max_user_watches; then
  echo 'Increasing number of file watches for inotify to 200000.'
  echo 'This requires sudo privileges'
  echo '200000' | sudo tee /proc/sys/fs/inotify/max_user_watches
fi

if [ ! -z $interactive ] && [ $interactive = 'true' ]; then
  docker run --rm -it -v "$PWD":/mnt coinbootmaker bash
else
  docker run --rm -it -v "$PWD":/mnt coinbootmaker bash -c 'cd /mnt/build/ && run-parts /mnt/src'
fi

echo "Cleaning up $WORKING_DIRECTORY"
rm -rf $WORKING_DIRECTORY

